---
## Author
author:
  name: Поляков Глеб Сергеевич
  degrees: DSc
  orcid: 0000-0002-0877-7063
  email: kulyabov-ds@rudn.ru
  affiliation:
    - name: Российский университет дружбы народов
      country: Российская Федерация
      postal-code: 117198
      city: Москва
      address: ул. Миклухо-Маклая, д. 6

## Title
title: "Лабораторная работа №2"
subtitle: "Измерение и тестирование пропускной способности сети. Интерактивный эксперимент"
license: "CC BY"
---

# Цель работы

Основной целью работы является знакомство с инструментом для измерения
пропускной способности сети в режиме реального времени — iPerf3, а также
получение навыков проведения интерактивного эксперимента по измерению
пропускной способности моделируемой сети в среде Mininet.

# Задание

1. Установить на виртуальную машину mininet iPerf3 и дополнительное про-
граммное обеспечения для визуализации и обработки данных.
2. Провести ряд интерактивных экспериментов по измерению пропускной
способности с помощью iPerf3 с построением графиков.

# Выполнение лабораторной работы

### 2.4.1. Установка необходимого программного обеспечения
1. Запустите виртуальную среду с mininet.
2. Из основной ОС подключитесь к виртуальной машине:
1 ssh -Y mininet@192.168.x.y
3. После подключения к виртуальной машине mininet посмотрите IP-адреса
машины:

    1 ifconfig
![](image/image_1.png){#fig-001 width=70%}
Для доступа к сети Интернет должен быть активен адрес NAT: 10.0.0.x. Если
активен только внутренний адрес машины вида 192.168.x.y, то активируйте второй интерфейс, набрав в командной строке:

    1 sudo dhclient eth1
    2 ifconfig
![](image/image_2.png){#fig-001 width=70%}
4. Обновите репозитории программного обеспечения на виртуальной машине:

    1 sudo apt-get update
    ![](image/image_3.png){#fig-001 width=70%}
5. Установите iperf3:
    1 sudo apt-get install iperf3
    ![](image/image_4.png){#fig-001 width=70%}
6. Установите необходимое дополнительное программное обеспечение на вир-
туальную машину:
    1 sudo apt-get install git jq gnuplot-nox evince
    ![](image/image_5.png){#fig-001 width=70%}
7. Разверните iperf3_plotter. Для этого:
- перейдите во временный каталог и скачайте репозиторий:
    1 cd /tmp
    2 git clone https://github.com/ekfoury/iperf3_plotter.git
    ![](image/image_6.png){#fig-001 width=70%}
- установите iperf3_plotter:
    1 cd /tmp/iperf3_plotter
    2 sudo cp plot_* /usr/bin
    3 sudo cp *.sh /usr/bin
    ![](image/image_7.png){#fig-001 width=70%}
Обратите внимание, что скрипты не работают с путями, имеющими в назва-
нии пробелы и кириллицу.
### 2.4.2. Интерактивные эксперименты
1. Задайте простейшую топологию, состоящую из двух хостов и коммутатора
с назначенной по умолчанию mininet сетью 10.0.0.0/8:
    1 sudo mn --topo=single,2 -x
    ![](image/image_8.png){#fig-001 width=70%}
После введения этой команды запустятся терминалы двух хостов, коммута-
тора и контроллера. Терминалы коммутатора и контроллера можно закрыть.
2. В терминале виртуальной машины посмотрите параметры запущенной в ин-
терактивном режиме топологии:
    1 mininet> net
    2 mininet> links
    3 mininet> dump
    ![](image/image_9.png){#fig-001 width=70%}
3. Проведите простейший интерактивный эксперимент по измерению пропуск-
ной способности с помощью iPerf3:

- В терминале h2 запустите сервер iPerf3:
    1 iperf3 -s
    ![](image/image_10.png){#fig-001 width=70%}
После запуска этой команды хост h2 перейдёт в состояние прослушивания
5201-го порта в ожидании входящих подключений.
- В терминале хоста h1 запустите клиент iPerf3:
    1 iperf3 -c 10.0.0.2
    ![](image/image_11.png){#fig-001 width=70%}
Здесь параметр -c указывает, что хост h1 настроен как клиент, а параметр
10.0.0.2 является IP-адресом сервера iPerf3 (хост h2).
- Дождитесь окончания теста. По умолчанию время тестирования установ-
лено в 10 секунд. Для прерывания работы клиента iPerf3 достаточно на
хосте h1 нажать Ctrl + c , при этом сервер iPerf3 на хосте h1 продолжит
прослушивать порт 5201. Для остановки как сервера, так и клиента iPerf3
необходимо в терминале хоста h2 нажать Ctrl + c .
- Проанализируйте полученный в результате выполнения теста сводный от-
чёт, отобразившийся как на клиенте, так и на сервере iPerf3, содержащий
следующие данные:
- ID: идентификационный номер соединения.
- интервал (Interval): временной интервал для периодических отчетов
о пропускной способности (по умолчанию временной интервал равен 1
секунде);
- передача (Transfer): сколько данных было передано за каждый интервал
времени;
- пропускная способность (Bitrate): измеренная пропускная способность
в каждом временном интервале;
- Retr: количество повторно переданных TCP-сегментов за каждый вре-
менной интервал (это поле увеличивается, когда TCP-сегменты теряются
в сети из-за перегрузки или повреждения);
- Cwnd: указывает размер окна перегрузки в каждом временном интер-
вале (TCP использует эту переменную для ограничения объёма данных,
которые TCP-клиент может отправить до получения подтверждения от-
правленных данных).
Суммарные данные на сервере аналогичны данным на стороне клиента
iPerf3 и должны интерпретироваться таким же образом.
4. Проведите аналогичный эксперимент в интерфейсе mininet.
- Запустите сервер iPerf3 на хосте h2:
    1 mininet> h2 iperf3 -s &
    ![](image/image_12.png){#fig-001 width=70%}
- Запустите клиент iPerf3 на хосте h1:
    1 mininet> h1 iperf3 -c h2
    ![](image/image_13.png){#fig-001 width=70%}

- Остановите серверный процесс:
    1 mininet> h2 killall iperf3
    ![](image/image_14.png){#fig-001 width=70%}
- Сравните результат с отчётом предыдущего эксперимента.
5. Для указания iPerf3 периода времени для передачи можно использовать
ключ -t (или --time) — время в секундах для передачи (по умолчанию 10
секунд):
- В терминале h2 запустите сервер iPerf3:
    1 iperf3 -s
    ![](image/image_15.png){#fig-001 width=70%}
- В терминале h1 запустите клиент iPerf3 с параметром -t, за которым
следует количество секунд:
    1 iperf3 -c 10.0.0.2 -t 5
- Для остановки сервера нажмите Ctrl + c в терминале хоста h2.
6. Настройте клиент iPerf3 для выполнения теста пропускной способности
с 2-секундным интервалом времени отсчёта как на клиенте, так и на сервере.
Используйте опцию -i для установки интервала между отсчётами, измеряемого в секундах:
- В терминале h2 запустите сервер iPerf3:
    1 iperf3 -s -i 2
- В терминале h1 запустите клиент iPerf3:
    1 iperf3 -c 10.0.0.2 -i 2
    ![](image/image_16.png){#fig-001 width=70%}
- Остановите сервер iPerf3, нажав Ctrl+c в терминале хоста h2.
- Сравните результат с отчётами из предыдущих экспериментов.
7. Задайте на клиенте iPerf3 отправку определённого объёма данных. Исполь-
зуйте опцию -n для установки количества байт для передачи:
- В терминале h2 запустите сервер iPerf3:
    1 iperf3 -s
- В терминале h1 запустите клиент iPerf3, задав объём данных 16 Гбайт:
    1 iperf3 -c 10.0.0.2 -n 16G
    ![](image/image_17.png){#fig-001 width=70%}
Обратите внимание, что по умолчанию iPerf3 выполняет измерение про-
пускной способности в течение 10 секунд, но при задании количества
данных для передачи клиент iPerf3 будет продолжать отправлять паке-
ты до тех пор, пока не будет отправлен весь объем данных, указанный
пользователем.

- Остановите сервер iPerf3, нажав Ctrl+c в терминале хоста h2.
8. Измените в тесте измерения пропускной способности iPerf3 протокол пере-
дачи данных с TCP (установлен по умолчанию) на UDP. iPerf3 автоматически
определяет протокол транспортного уровня на стороне сервера. Для измене-
ния протокола используйте опцию -u на стороне клиента iPerf3:
- В терминале h2 запустите сервер iPerf3:
    1 iperf3 -s
- В терминале h1 запустите клиент iPerf3, задав протокол UDP:
    1 iperf3 -c 10.0.0.2 -u

- После завершения теста отобразятся следующие сводные данные:
- ID, интервал, передача, битрейт: то же, что и у TCP.
- Jitter: разница в задержке пакетов.
- Lost/Total: указывает количество потерянных дейтаграмм по сравнению
с общим количеством отправленных на сервер (и процентное соотноше-
ние).
- Остановите сервер iPerf3, нажав Ctrl+c в терминале хоста h2.
9. В тесте измерения пропускной способности iPerf3 измените номер пор-
та для отправки/получения пакетов или датаграмм через указанный порт.
Используйте для этого опцию -p:
- В терминале h2 запустите сервер iPerf3, используя параметр -p, чтобы
указать порт прослушивания:
    1 iperf3 -s -p 3250
- В терминале h1 запустите клиент iPerf3, указав порт:
    1 iperf3 -c 10.0.0.2 -p 3250
    ![](image/image_18.png){#fig-001 width=70%}
- Остановите сервер iPerf3, нажав Ctrl+c в терминале хоста h2.
10. По умолчанию после запуска сервер iPerf3 постоянно прослушивает входя-
щие соединения. В тесте измерения пропускной способности iPerf3 задайте
для сервера параметр обработки данных только от одного клиента с оста-
новкой сервера по завершении теста. Для этого используйте опцию -1 на
сервере iPerf3:
- В терминале h2 запустите сервер iPerf3, используя параметр -1, чтобы
принять только одного клиента:
    1 iperf3 -s -1

- В терминале h1 запустите клиент iPerf3:

    1 iperf3 -c 10.0.0.2
    ![](image/image_19.png){#fig-001 width=70%}
Обратите внимание, что после завершения этого теста сервер iPerf3
немедленно останавливается.
11. Экспортируйте результаты теста измерения пропускной способности iPerf3
в файл JSON:
- В виртуальной машине mininet создайте каталог для работы над проектом:
    1 mkdir -p ~/work/lab_iperf3
- В терминале h2 запустите сервер iPerf3:
    1 iperf3 -s
- В терминале h1 запустите клиент iPerf3, указав параметр -J для отобра-
жения вывода результатов в формате JSON:
    1 iperf3 -c 10.0.0.2 -J
    ![](image/image_20.png){#fig-001 width=70%}
В данном случае параметр -J выведет текст JSON на экран через стандарт-
ный вывод (stdout) после завершения теста.
- Экспортируйте вывод результатов теста в файл, перенаправив стандарт-
ный вывод в файл:
    1 iperf3 -c 10.0.0.2 -J > /home/mininet/work/lab_iperf3/iperf_results.json
    ![](image/image_21.png){#fig-001 width=70%}
- Убедитесь, что файл iperf_results.json создан в указанном каталоге.
Для этого в терминале хоста h1 введите следующие команды:
    1 cd /home/mininet/work/lab_iperf3
    2 ls -l
    ![](image/image_22.png){#fig-001 width=70%}
Команда cat может использоваться для отображения содержимого файла.
- Остановите сервер iPerf3, нажав Ctrl+c в терминале хоста h2.
- Завершите работу mininet в интерактивном режиме, введя в интерфейсе
mininet:
    1 mininet> exit
12. Визуализируйте результаты эксперимента:
- В виртуальной машине mininet исправьте права запуска X-соединения.
Скопируйте значение куки (MIT magic cookie)1 своего пользователя
mininet в файл для пользователя root:
    1 mininet@mininet-vm:~$ xauth list $DISPLAY
    2 mininet-vm/unix:10 MIT-MAGIC-COOKIE-1 295acad8e35d17636924c5ab80e8462d↪
    3
    4 mininet@mininet-vm:~$ sudo -i
    5 root@mininet-vm:~# xauth add mininet-vm/unix:10 MIT-MAGIC-COOKIE-1 295acad8e35d17636924c5ab80e8462d
    6 root@mininet-vm:~# logout
    ![](image/image_23.png){#fig-001 width=70%}
После выполнения этих действий графические приложения должны запус-
каться под пользователем mininet.
- В виртуальной машине mininet перейдите в каталог для работы над про-
ектом, проверьте и при необходимости скорректируйте права доступа
к файлу JSON:
    1 cd ~/work/lab_iperf3
    2 ls -l
    3 sudo chown -R mininet:mininet ~/work
    4 ls -l
    ![](image/image_24.png){#fig-001 width=70%}
- Сгенерируйте выходные данные для файла JSON iPerf3, выполнив следу-
ющую команду (обратите внимание, что скрипт не работает с путями,
имеющими в названии файла пробелы):
    1 plot_iperf.sh iperf3_results.json
    ![](image/image_25.png){#fig-001 width=70%}
- Сценарий построения должен создать файл CSV (1.dat), который может
использоваться другими приложениями. В подкаталоге results каталога,
в котором был выполнен скрипт, сценарий должен создать графики для
следующих полей файла JSON:
- окно перегрузки (cwnd.pdf);
- повторная передача (retransmits.pdf);
- время приема-передачи (RTT.pdf);
- отклонение времени приема-передачи (RTT_Var.pdf);
- пропускная способность (throughput.pdf);
- максимальная единица передачи (MTU.pdf);
- количество переданных байтов (bytes.pdf).
- Убедитесь, что файлы с данными и графиками сформировались:
    1 cd ~/work/lab_iperf3
    2 ls -l
    3 cd ~/work/lab_iperf3/results
    4 ls -l
    ![](image/image_26.png){#fig-001 width=70%}

# Выводы

Ознакомился с инструментом для измерения пропускной способности сети в режиме реального времени — iPerf3, а также получил навыки проведения интерактивного эксперимента по измерению пропускной способности моделируемой сети в среде Mininet.

# Список литературы{.unnumbered}

::: {#refs}
:::
