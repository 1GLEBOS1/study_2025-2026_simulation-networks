---
## Author
author:
  name: Поляков Глеб Сергеевич
  affiliation:
    - name: Российский университет дружбы народов
      country: Российская Федерация
      postal-code: 117198
      city: Москва
      address: ул. Миклухо-Маклая, д. 13

## Title
title: "Лабораторная работа №3"
subtitle: "Измерение и тестирование пропускной способности сети. Воспроизводимый эксперимент"
license: "CC BY"
---

# Цель работы

Основной целью работы является знакомство с инструментом для измерения пропускной способности сети в режиме реального времени — iPerf3, а также получение навыков проведения воспроизводимого эксперимента по измерению пропускной способности моделируемой сети в среде Mininet.

# Задание

1. Воспроизвести посредством API Mininet эксперименты по измерению пропускной способности с помощью iPerf3.
2. Построить графики по проведённому эксперименту.

# Выполнение лабораторной работы

## 3.4. Последовательность выполнения работы
1. С помощью API Mininet создайте простейшую топологию сети, состоящую из двух хостов и коммутатора с назначенной по умолчанию mininet сетью 10.0.0.0/8:
- В каталоге /work/lab_iperf3 для работы над проектом создайте под-каталог lab_iperf3_topo и скопируйте в него файл с примером скрипта mininet/examples/emptynet.py, описывающего стандартную простую топологию сети mininet:

![](image/img_1.png){#fig-001 width=70%}

- Изучите содержание скрипта lab_iperf3_topo.py

- Запустите скрипт создания топологии lab_iperf3_topo.py:
- После отработки скрипта посмотрите элементы топологии и завершите работу mininet:
![](image/img_2.png){#fig-002 width=70%}
2. Внесите в скрипт lab_iperf3_topo.py изменение, позволяющее вывести на экран информацию о хосте h1, а именно имя хоста, его IP-адрес, MAC-адрес. Для этого после строки, задающей старт работы сети, добавьте строку:
![](image/img_3.png){#fig-003 width=70%}
![](image/img_4.png){#fig-004 width=70%}
Здесь:
- IP() возвращает IP-адрес хоста или определенного интерфейса;
- MAC() возвращает MAC-адрес хоста или определенного интерфейса.
3. Проверьте корректность отработки изменённого скрипта.
4. Измените скрипт lab_iperf3_topo.py так, чтобы на экран выводилась информация об имени, IP-адресе и MAC-адресе обоих хостов сети. Проверьте корректность отработки изменённого скрипта.
![](image/img_5.png){#fig-005 width=70%}
![](image/img_6.png){#fig-006 width=70%}
5. Mininet предоставляет функции ограничения производительности и изоляции с помощью классов CPULimitedHost и TCLink. Добавьте в скрипт настройки параметров производительности:
- Сделайте копию скрипта lab_iperf3_topo.py:
- В начале скрипта lab_iperf3_topo2.py добавьте записи об импорте классов CPULimitedHost и TCLink:
![](image/img_7.png){#fig-07 width=70%}
- В скрипте lab_iperf3_topo2.py измените строку описания сети, указав на использование ограничения производительности и изоляции:
- В скрипте lab_iperf3_topo2.py измените функцию задания параметров виртуального хоста h1, указав, что ему будет выделено 50% от общих ресурсов процессора системы:
- Аналогичным образом для хоста h2 задайте долю выделения ресурсов процессора в 45%.
- В скрипте lab_iperf3_topo2.py измените функцию параметров соединения между хостом h1 и коммутатором s3:
![](image/img_8.png){#fig-008 width=70%}
Здесь добавляется двунаправленный канал с характеристиками пропускной способности, задержки и потерь:
- параметр пропускной способности (bw) выражается числом в Мбит;
- задержка (delay) выражается в виде строки с заданными единицами измерения (например, 5ms, 100us, 1s);
- потери (loss) выражаются в процентах (от 0 до 100);
- параметр максимального значения очереди (max_queue_size) выражается в пакетах;
- параметр use_htb указывает на использование ограничителя интенсивности входящего потока Hierarchical Token Bucket (HTB).
- Запустите на отработку сначала скрипт lab_iperf3_topo2.py, затем lab_iperf3_topo.py и сравните результат.
6. Постройте графики по проводимому эксперименту:
- Сделайте копию скрипта lab_iperf3_topo2.py и поместите его в подкаталог iperf:
![](image/img_9.png){#fig-009 width=70%}
- В начале скрипта lab_iperf3.py добавьте запись
![](image/img_10.png){#fig-010 width=70%}
- Измените код в скрипте lab_iperf3.py так, чтобы:
- на хостах не было ограничения по использованию ресурсов процессора;
- каналы между хостами и коммутатором были по 100 Мбит/с с задержкой 75 мс, без потерь, без использования ограничителей пропускной способности и максимального размера очереди.
- После функции старта сети опишите запуск на хосте h2 сервера iPerf3, а на хосте h1 запуск с задержкой в 10 секунд клиента iPerf3 с экспортом результатов в JSON-файл, закомментируйте строки, отвечающие за запуск CLI-интерфейса:
![](image/img_11.png){#fig-011 width=70%}
- В отчёте поясните синтаксис вызова iPerf3, заданный в скрипте.
- Запустите на отработку скрипт lab_iperf3.py:
![](image/img_12.png){#fig-012 width=70%}
- Постройте графики из получившегося JSON-файла:
![](image/img_13.png){#fig-013 width=70%}
- Создайте Makefile для проведения всего эксперимента:
- В Makefile пропишите запуск скрипта эксперимента, построение графи-
ков и очистку каталога от результатов:
![](image/img_14.png){#fig-014 width=70%}
- Проверьте корректность отработки Makefile:
![](image/img_15.png){#fig-015 width=70%}
![](image/img_16.png){#fig-016 width=70%}
![](image/img_17.png){#fig-017 width=70%}
7. Завершите соединение с виртуальной машиной mininet и выключите её.

# Выводы

Ознакомился с инструментом для измерения пропускной способности сети в режиме реального времени — iPerf3, а также получил навыки проведения воспроизводимого эксперимента по измерению пропускной способности моделируемой сети в среде Mininet.

# Список литературы{.unnumbered}

::: {#refs}
:::
